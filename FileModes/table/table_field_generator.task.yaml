task:
    environment: native_shared.environment.yaml
    fieldgrid:
        children: []
        elements: {}
        values: {}
    streams:
    -   main:
        -   content: "import yaml\nimport os\n\nif 'original_url' in parameters:\n\
                \    table_path = parameters['original_url']\n    # print(\"original_url\
                \ \" + table_path)\n    \n    table_dir = os.path.dirname(table_path)\n\
                \    # print(\"table_dir \" + table_dir)\n    \n    if (file.exists(table_path)):\n\
                \        content = file.download(table_path)\n        # print(content)\n\
                \        \n        table_content = yaml.safe_load(content)\n     \
                \   # print(table_content)\n        # print(type(table_content))\n\
                \        \n        table_name = table_content['table']['name']\n \
                \       table_columns = table_content['table']['columns']\n      \
                \  # print(table_name)\n        # print(table_columns)\n        \n\
                \        if (file.exists(f\"{table_dir}/{table_name} fields\")):\n\
                \            folder.create(f\"{table_dir}/{table_name} fields\")\n\
                \            # folder.create(f\"./{table_name} fields\")\n       \
                \     for col in table_columns:\n                if \"doc\" in col:\n\
                \                    desc = col['doc']\n                else:\n  \
                \                  desc = ''\n                # print(f\"name: {col['name']},\
                \ type: {col['type']}, doc: {desc}\")\n                data = {\n\
                \                    \"field\": {\n                        \"data\"\
                : {\n                            \"action\": None,\n             \
                \               \"options\": None,\n                            \"\
                params\": {\n                                \"path\": None,\n   \
                \                             \"query\": None\n                  \
                \          },\n                            \"source\": None\n    \
                \                    },\n                        \"default\": '',\n\
                \                        \"description\": desc,\n                \
                \        \"maximum\": '',\n                        \"minimum\": '',\n\
                \                        \"name\": col['name'],\n                \
                \        \"placeholder\": '',\n                        \"readonly\"\
                : False,\n                        \"required\": False,\n         \
                \               \"spacing\": '3',\n                        \"step\"\
                : '',\n                        \"type\": col['type'].lower()\n   \
                \                 }\n                }\n                \n       \
                \         # print(data)\n                yaml_str = yaml.dump(data,\
                \ sort_keys=False)\n                file.put(f\"{table_dir}/{table_name}\
                \ fields/{col['name']}.field.yaml\", yaml_str)\n                \n\
                \                print(\"fields generated\")\n        else:\n    \
                \        print(\"fields have been generated before\")\n    "
            loop-iterable: ''
            type: code
        -   content: "# create a task to view table\ntask_data = {\n    \"task\":\
                \ {\n        \"environment\": 'native_shared.environment.yaml',\n\
                \        \"fieldgrid\": {\n            \"children\": [],\n       \
                \     \"elements\": {},\n            \"values\": {},\n        },\n\
                \        \"streams\": {\n            \"main\": [\n               \
                \ \"chart\": {\n                    \"advanced\": '',\n          \
                \          \"legend\": 'Off',\n                    \"series-annos\"\
                : [\n                        \"anno-col\": '',\n                 \
                \       \"anno-col-back\": '',\n                        \"anno-dt\"\
                : False,\n                        \"anno-i\": '',\n              \
                \          \"anno-label\": '',\n                        \"anno-s\"\
                : '',\n                        \"anno-tab\": 0,\n                \
                \        \"anno-type\": 'box',\n                        \"anno-u\"\
                : '',\n                        \"anno-width\": '',\n             \
                \           \"anno-x\": '',\n                        \"anno-xm\":\
                \ '',\n                        \"anno-y\": '',\n                 \
                \       \"anno-ym\": '',\n                    ],\n               \
                \     \"series-formats\": [\n                        \"format-col\"\
                : '',\n                        \"format-col-back\": '',\n        \
                \                \"format-dt\": False,\n                        \"\
                format-f\": False,\n                        \"format-lw\": '',\n \
                \                       \"format-nrx\": '',\n                    \
                \    \"format-p\": False,\n                        \"format-pr\":\
                \ '',\n                        \"format-ps\": 'circle',\n        \
                \                \"format-title\": '',\n                        \"\
                format-ua\": '',\n                    ],\n                    \"series-groups\"\
                : [\n                        \"series-l\": '',\n                 \
                \       \"series-s\": '',\n                        \"series-tab\"\
                : 0,\n                        \"series-type\": 'Line',\n         \
                \               \"series-u\": '',\n                        \"series-x\"\
                : '',\n                        \"series-y\": '',\n               \
                \         \"series-ymax\": '',\n                        \"series-ymin\"\
                : '',\n                        \"series-z\": '',\n               \
                \     ],\n                    \"subtitle\": '',\n                \
                \    \"title\": '',\n                    \"xaxis-type\": 'category',\n\
                \                },\n                \"loop-iterable\": '',\n    \
                \            \"output\": 'table',\n                \"table\": {\n\
                \                    \"checkbox\": False,\n                    \"\
                export\": False,\n                    \"filter\": False,\n       \
                \             \"footer\": False,\n                    \"multiselect-row\"\
                : False,\n                    \"pagesize\": '15',\n              \
                \      \"pagination\": True,\n                    \"search\": False,\n\
                \                    \"slate\": '',\n                    \"sortable\"\
                : True,\n                    \"style\": 'default',\n             \
                \       \"title\": '',\n                },\n                \"tabs\"\
                : [\n                    \"content\": 'select * from ' + table_name,\n\
                \                    \"source\": '{ Clarama[''Services''][''ClaramaSourceDB'']\
                \ }',\n                    \"tab_id\": 0,\n                ],\n  \
                \              \"type\": 'data'\n            ]\n        }\n    }\n\
                }\n\nyaml_str = yaml.dump(task_data, sort_keys=False)\nfile.put(f\"\
                {table_dir}/{table_name}.task.yaml\", yaml_str)"
            loop-iterable: ''
            type: code
        -   content: '# create add new record btn'
            loop-iterable: ''
            type: code
        -   content: '# create slate for table

                # right click on record to edit n dlt record

                # slate_data = {

                #     "slate":

                #         "grid":

                #             "children":

                #             -   "h": null

                #                 "id": element_2

                #                 "w": ''3''

                #                 "x": ''4''

                #                 "y": ''0''

                #             -   "h": ''19''

                #                 "id": element_0

                #                 "w": ''12''

                #                 "x": ''0''

                #                 "y": ''1''

                #             "elements":

                #                 "element_0":

                #                     "links":

                #                     -   "element": modal

                #                         "params": ''''

                #                         "uid": ''0''

                #                         "url": ./Issues/Tasks/Add_Comments.task.yaml

                #                     "params": ''''

                #                     "refresh": true

                #                     "url": ./Issues/Tasks/Issues.task.yaml

                #                 "element_2":

                #                     "links":

                #                     -   "element": modal

                #                         "params": ''''

                #                         "uid": ''0''

                #                         "url": ./Issues/Tasks/Add_Issues.task.yaml

                #                     "spacing": ''1''

                #                     "url": ./Issues/Fields/Add New btn.field.yaml

                # }


                # yaml_str = yaml.dump(slate_data, sort_keys=False)

                # file.put(f"{table_dir}/{table_name}.slate.yaml", yaml_str)'
            loop-iterable: ''
            type: code
